<?xml version="1.0" encoding="UTF-8"?>
<dds xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://community.rti.com/schema/6.0.1/rti_dds_profiles.xsd" version="6.0.1">
    <types>
      <module name="RTI">
        <module name="CONSTANTS">
          <const name="QOS_LIBRARY" type="string" value="&quot;Demo_Qos_Lib&quot;"/>
          <const name="BASE_PARTICIPANT_QOS" type="string" value="&quot;Base_Participant_Qos&quot;"/>
          <const name="BEST_EFFORT_DEADLINE_QOS" type="string" value="&quot;Best_Effort_Deadline_Qos&quot;"/>
          <const name="COMMAND_RESPONSE_QOS" type="string" value="&quot;Command_Response_Qos&quot;"/>
          <const name="DURABLE_STATE_QOS" type="string" value="&quot;Durable_State_Qos&quot;"/>
          <const name="EVENTS_ALARMS_QOS" type="string" value="&quot;Events_Alarms_Qos&quot;"/>
          <const name="BATCHED_SAMPLES_QOS" type="string" value="&quot;Batched_Samples_Qos&quot;"/>
        </module>
        <module name="TYPES">
          <typedef name="TimeStamp_t" type="int64"/>
          <struct name="Duration_t" nested="true">
            <member name="sec" type="int32"/>
            <member name="nanosec" type="int32"/>
          </struct>
          <typedef name="AnalogReadng_t" type="uint16"/>
          <typedef name="Voltage_t" type="float32"/>
          <typedef name="Temperature_t" type="float32"/>
          <enum name="Temperature_Units_t">
            <enumerator name="DEGREES_C"/>
            <enumerator name="DEGREES_F"/>
            <enumerator name="DEGREES_K"/>
          </enum>
          <typedef name="Percentage_t" type="float32"/>
        </module>
        <module name="SENSOR">
          <const name="SENSOR_PERIODICS_TOPIC" type="string" value="&quot;SensorPeriodics&quot;"/>
          <const name="SENSOR_INFO_TOPIC" type="string" value="&quot;SensorInfo&quot;"/>
          <const name="SENSOR_CONFIG_TOPIC" type="string" value="&quot;SensorConfig&quot;"/>
          <struct name="_sensor_id_t" nested="true">
            <member name="SensorTag" type="string" stringMaxLength="32" key="true"/>
          </struct>
          <typedef name="SensorID_t" type="nonBasic" nonBasicTypeName="RTI::SENSOR::_sensor_id_t"/>
          <struct name="SensorPeriodics" extensibility="appendable">
            <member name="id" type="nonBasic" nonBasicTypeName="RTI::SENSOR::SensorID_t"/>
            <member name="timestamp" type="nonBasic" nonBasicTypeName="RTI::TYPES::TimeStamp_t"/>
            <member name="exampleSensorReading" type="float32"/>
          </struct>
          <struct name="SensorInfo" extensibility="appendable">
            <member name="id" type="nonBasic" nonBasicTypeName="RTI::SENSOR::SensorID_t"/>
            <member name="parameter1" type="int32"/>
          </struct>
          <struct name="SensorConfig" extensibility="appendable">
            <member name="id" type="nonBasic" nonBasicTypeName="RTI::SENSOR::SensorID_t"/>
            <member name="units" type="nonBasic" nonBasicTypeName="RTI::TYPES::Temperature_Units_t"/>
            <member name="calibrationFactors" type="float32" sequenceMaxLength="3"/>
          </struct>
        </module>
        <module name="PATIENT">
          <const name="PATIENT_INFO_TOPIC" type="string" value="&quot;PatientInfo&quot;"/>
          <const name="PATIENT_PERIODICS_TOPIC" type="string" value="&quot;PatientPeriodics&quot;"/>
          <const name="PATIENT_CONFIG_TOPIC" type="string" value="&quot;PatientConfig&quot;"/>
          <enum name="PATIENT_ALARM_TYPE">
            <enumerator name="NO_ALARM" value="0"/>
            <enumerator name="PULSE_LOW" value="1"/>
            <enumerator name="PULSE_HIGH" value="2"/>
            <enumerator name="PULSE_SENSOR_ERROR" value="3"/>
          </enum>
          <struct name="_patient_id_t" nested="true">
            <member name="Id" type="string" stringMaxLength="32" key="true"/>
          </struct>
          <typedef name="Patient_ID_t" type="nonBasic" nonBasicTypeName="RTI::PATIENT::_patient_id_t"/>
          <struct name="PatientPulse">
            <member name="Id" type="nonBasic" nonBasicTypeName="RTI::PATIENT::_patient_id_t"/>
            <member name="timestamp" type="nonBasic" nonBasicTypeName="RTI::TYPES::TimeStamp_t"/>
            <member name="readings" type="uint32" sequenceMaxLength="100"/>
            <member name="bpm" type="uint8"/>
          </struct>
          <struct name="PatientInfo">
            <member name="Id" type="nonBasic" nonBasicTypeName="RTI::PATIENT::_patient_id_t"/>
            <member name="FirstName" type="string" stringMaxLength="32"/>
            <member name="LastName" type="string" stringMaxLength="32"/>
            <member name="Age" type="uint32"/>
            <member name="HeightCm" type="uint32"/>
            <member name="WeightKg" type="uint32"/>
            <member name="Sex" type="string" stringMaxLength="32"/>
          </struct>
          <struct name="PatientConfig">
            <member name="Id" type="nonBasic" nonBasicTypeName="RTI::PATIENT::_patient_id_t"/>
            <member name="PulseHighThreshold" type="uint32" default="200"/>
            <member name="PulseLowThreshold" type="uint32" default="0"/>
          </struct>
        </module>
      </module>
    </types>

    <qos_library name="RTI_Eval_Qos_Library_1_0">
      <qos_profile name="Factory" is_default_participant_factory_profile="true">
        <participant_factory_qos>
          <logging>
            <verbosity>ERROR</verbosity>
            <category>ALL</category>
          </logging>
          <entity_factory>
		    <!-- Note that the following "autoenable_created_entities" setting was originally set
			     to false in order to work around an issue using the python connector; it has been 
				 returned to "true" which is the default setting to avoid issues with WIS and routing
				 service, but there are situations where you might need to change this. -->
            <autoenable_created_entities>true</autoenable_created_entities>
          </entity_factory>
        </participant_factory_qos>
      </qos_profile>
      <qos_profile name="Base_Participant_QoS">
        <participant_qos>
          <transport_builtin>
            <mask>UDPv4</mask>
          </transport_builtin>
          <discovery>
            <multicast_receive_addresses>
              <element>239.255.0.1</element>
            </multicast_receive_addresses>
            <initial_peers>
              <element>builtin.udpv4://239.255.0.1</element>
            </initial_peers>
          </discovery>
          <property>
            <value>
              <element>
                <name>dds.transport.UDPv4.builtin.recv_socket_buffer_size</name>
                <value>2097152</value>
                <propagate>false</propagate>
              </element>
              <element>
                <name>dds.transport.UDPv4.builtin.send_socket_buffer_size</name>
                <value>524288</value>
                <propagate>false</propagate>
              </element>
              <element>
                <name>dds.transport.UDPv4.builtin.multicast_ttl</name>
                <value>1</value>
                <propagate>false</propagate>
              </element>
            </value>
          </property>
          <resource_limits>
            <type_object_max_serialized_length>65535</type_object_max_serialized_length>
          </resource_limits>
        </participant_qos>
      </qos_profile>
	    <qos_profile name="PulseWisBaseQos" base_name="Base_Participant_QoS">

            <participant_qos name="PulseWisParticipant">
                <participant_name>
                    <name>PulseWisParticipant</name>
                    <role_name>PulseWisParticipantRole</role_name>
                </participant_name>  
            </participant_qos>

            <datareader_qos name="PulseTopicReaderQoS">
                <reliability>
                    <kind>RELIABLE_RELIABILITY_QOS</kind>
                </reliability>
                <history>
                    <kind>KEEP_LAST_HISTORY_QOS</kind>
                    <depth>100</depth>
                </history>
                <!-- !!!ToDo: update as required -->
            </datareader_qos>

            <datareader_qos name="PulseInfoReaderQoS">
                <reliability>
                    <kind>RELIABLE_RELIABILITY_QOS</kind>
                </reliability>
                <history>
                    <kind>KEEP_LAST_HISTORY_QOS</kind>
                    <depth>2</depth>
                </history>
                <!-- !!!ToDo: update as required -->
            </datareader_qos>

            <datawriter_qos name="PulseConfigWriterQoS">
                <reliability>
                    <kind>RELIABLE_RELIABILITY_QOS</kind>
                </reliability>
                <history>
                    <kind>KEEP_LAST_HISTORY_QOS</kind>
                    <depth>5</depth>
                </history>
            </datawriter_qos>

        </qos_profile>
	    <qos_profile name="PulseWisMonQos" base_name="PulseWisBaseQos">

            <participant_qos name="PulseWisMonParticipant">
                <property> 
                    <value> 
                        <element> 
                            <name>rti.monitor.library</name> 
                            <value>rtimonitoring</value> 
                        </element> 
                        <element> 
                            <name>rti.monitor.create_function</name> 
                            <value>RTIDefaultMonitor_create</value> 
                        </element> 
                    </value> 
                </property> 
            </participant_qos>
        </qos_profile>
        <qos_profile name="PiRS_LanQosProfile">

            <participant_qos name="ParticipantQoS"> 
                <participant_name>
                    <name>PiRsLocalParticipant</name>
                    <role_name>PiRsLocalParticipantRole</role_name>
                </participant_name> 
            </participant_qos> 

            <datawriter_qos name="ConfigTopicWriter">
                <publication_name>
                    <name>PiLocalConfigWriter</name>
                </publication_name>
                <reliability>
                    <kind>RELIABLE_RELIABILITY_QOS</kind>
                </reliability>
                <history>
                    <kind>KEEP_LAST_HISTORY_QOS</kind>
                    <depth>5</depth>
                </history>
            </datawriter_qos>

            <datareader_qos name="PulseTopicReader">
                <reliability>
                    <kind>RELIABLE_RELIABILITY_QOS</kind>
                </reliability>
                <history>
                    <kind>KEEP_LAST_HISTORY_QOS</kind>
                    <depth>200</depth>
                </history>
            </datareader_qos>

            <datareader_qos name="InfoTopicReader">
                <reliability>
                    <kind>RELIABLE_RELIABILITY_QOS</kind>
                </reliability>
                <history>
                    <kind>KEEP_LAST_HISTORY_QOS</kind>
                    <depth>2</depth>
                </history>
                <!-- !!!ToDo: update as required -->
            </datareader_qos>

        </qos_profile>

        <qos_profile name="PiRS_WanQosProfile">

            <participant_qos name="ParticipantQoS">
                <participant_name>
                    <name>PiRsWanParticipant</name>
                    <role_name>PiRsWanParticipantRole</role_name>
                </participant_name> 
                <discovery>
                    <initial_peers>
                        <element>tcpv4_wan://50.18.214.8:9900</element>
                    </initial_peers>
                </discovery>
                <discovery_config>
                    <participant_liveliness_assert_period>
                        <sec>10</sec>
                        <nanosec>0</nanosec>
                    </participant_liveliness_assert_period>
                </discovery_config>
                <transport_builtin>
                        <mask>MASK_NONE</mask>
                </transport_builtin>
                <property>
                    <value>
                        <element>
                            <name>dds.transport.load_plugins</name>
                            <value>dds.transport.TCPv4.tcp1</value>
                        </element>
                        <element>
                            <name>dds.transport.TCPv4.tcp1.library</name>
                            <value>nddstransporttcp</value>
                        </element>
                        <element>
                            <name>dds.transport.TCPv4.tcp1.create_function</name>
                            <value>NDDS_Transport_TCPv4_create</value>
                        </element>
                        <element>
                            <name>dds.transport.TCPv4.tcp1.parent.classid</name>
                            <value>NDDS_TRANSPORT_CLASSID_TCPV4_WAN</value>
                        </element>
                        <element>
                            <name>dds.transport.TCPv4.tcp1.connection_liveliness.enable</name>
                            <value>1</value>
                        </element>
                        <element>
                            <name>dds.transport.TCPv4.tcp1.connection_liveliness.lease_duration</name>
                            <value>10</value>
                        </element>
                        <element>
                            <name>dds.transport.TCPv4.tcp1.connection_liveliness.assertions_per_lease_duration</name>
                            <value>4</value>
                        </element>
                        <element>
                            <name>dds.transport.TCPv4.tcp1.server_bind_port</name>
                            <value>0</value> <!-- changed to zero since we're not supporting inbound connections -->
                        </element>
                        <element>
                            <name>dds.transport.TCPv4.tcp1.disable_nagle</name>
                            <value>1</value>
                        </element>
                    </value>
                </property>
            </participant_qos>

            <datareader_qos name="ConfigTopicReader">
                <reliability>
                    <kind>RELIABLE_RELIABILITY_QOS</kind>
                </reliability>
                <history>
                    <kind>KEEP_LAST_HISTORY_QOS</kind>
                    <depth>5</depth>
                </history>
                <!-- ToDo: update as required -->
            </datareader_qos>

            <datawriter_qos name="PulseTopicWriter">
                <publication_name>
                    <name>PiWanPulseWriter</name>
                </publication_name>
                <reliability>
                    <kind>RELIABLE_RELIABILITY_QOS</kind>
                </reliability>
                <history>
                    <kind>KEEP_LAST_HISTORY_QOS</kind>
                    <depth>200</depth>
                </history>
                <!-- !!!ToDo: update as required; this is going to the TCP tunnel so probably not much needed? -->
            </datawriter_qos>

            <datawriter_qos name="InfoTopicWriter">
                <publication_name>
                    <name>PiWanInfoWriter</name>
                </publication_name>
                <reliability>
                    <kind>RELIABLE_RELIABILITY_QOS</kind>
                </reliability>
                <history>
                    <kind>KEEP_LAST_HISTORY_QOS</kind>
                    <depth>2</depth>
                </history>
                <!-- !!!ToDo: update as required; this is going to the TCP tunnel so probably not much needed? -->
            </datawriter_qos>

        </qos_profile>

        <qos_profile name="PiRS_LanMonQosProfile" base_name="PiRS_LanQosProfile">
            <participant_qos name="ParticipantQoS"> 
                <property> 
                    <value> 
                        <element> 
                            <name>rti.monitor.library</name> 
                            <value>rtimonitoring</value> 
                        </element> 
                        <element> 
                            <name>rti.monitor.create_function</name> 
                            <value>RTIDefaultMonitor_create</value> 
                        </element> 
                    </value> 
                </property> 
            </participant_qos> 
        </qos_profile>

        <qos_profile name="PiRS_WanMonQosProfile" base_name="PiRS_WanQosProfile">
            <participant_qos name="ParticipantQoS"> 
                <property> 
                    <value> 
                        <element> 
                            <name>rti.monitor.library</name> 
                            <value>rtimonitoring</value> 
                        </element> 
                        <element> 
                            <name>rti.monitor.create_function</name> 
                            <value>RTIDefaultMonitor_create</value> 
                        </element> 
                    </value> 
                </property> 
            </participant_qos> 
        </qos_profile>

        <qos_profile name="WisRS_WanQosProfile">

            <participant_qos name="ParticipantQos">
                <participant_name>
                    <name>AwsRsWanParticipant</name>
                    <role_name>AwsRsWanParticipantRole</role_name>
                </participant_name> 
                <transport_builtin>
                    <mask>MASK_NONE</mask>
                </transport_builtin>
                <property>
                    <value>
                        <element>
                            <name>dds.transport.load_plugins</name>
                            <value>dds.transport.TCPv4.tcp1</value>
                        </element>
                        <element>
                            <name>dds.transport.TCPv4.tcp1.library</name>
                            <value>nddstransporttcp</value>
                        </element>
                        <element>
                            <name>dds.transport.TCPv4.tcp1.create_function</name>
                            <value>NDDS_Transport_TCPv4_create</value>
                        </element>
                        <element>
                            <name>dds.transport.TCPv4.tcp1.parent.classid</name>
                            <value>NDDS_TRANSPORT_CLASSID_TCPV4_WAN</value>
                        </element>
                        <element>
                            <name>dds.transport.TCPv4.tcp1.public_address</name>
                            <value>50.18.214.8:9900</value>
                        </element>
                        <element>
                            <name>dds.transport.TCPv4.tcp1.server_bind_port</name>
                            <value>9900</value>
                        </element>
                        <element>
                            <name>dds.transport.TCPv4.tcp1.disable_nagle</name>
                            <value>1</value>
                        </element>
                    </value>
                </property>
            </participant_qos>

            <datawriter_qos name="ConfigTopicWriter">
                <publication_name>
                    <name>AwsRsConfigWriter</name>
                </publication_name>
                <reliability>
                    <kind>RELIABLE_RELIABILITY_QOS</kind>
                </reliability>
                <history>
                    <kind>KEEP_LAST_HISTORY_QOS</kind>
                    <depth>5</depth>
                </history>
            </datawriter_qos>

            <datareader_qos name="PulseTopicReader">
                <reliability>
                    <kind>RELIABLE_RELIABILITY_QOS</kind>
                </reliability>
                <history>
                    <kind>KEEP_LAST_HISTORY_QOS</kind>
                    <depth>200</depth>
                </history>
                <!-- !!!ToDo: update as required; this is coming from the TCP tunnel so probably not much needed? -->
            </datareader_qos>

            <datareader_qos name="InfoTopicReader">
                <reliability>
                    <kind>RELIABLE_RELIABILITY_QOS</kind>
                </reliability>
                <history>
                    <kind>KEEP_LAST_HISTORY_QOS</kind>
                    <depth>2</depth>
                </history>
                <!-- !!!ToDo: update as required; this is coming from the TCP tunnel so probably not much needed? -->
            </datareader_qos>

        </qos_profile>

        <qos_profile name="WisRS_LanQosProfile">

            <participant_qos name="ParticipantQos">
                <participant_name>
                    <name>AwsRsLanParticipant</name>
                    <role_name>AwsRsLanParticipantRole</role_name>
                </participant_name> 
            </participant_qos>

            <datareader_qos name="ConfigTopicReader">
                <reliability>
                    <kind>RELIABLE_RELIABILITY_QOS</kind>
                </reliability>
                <history>
                    <kind>KEEP_LAST_HISTORY_QOS</kind>
                    <depth>5</depth>
                </history>
                <!-- !!!ToDo: update as required -->
            </datareader_qos>

            <datawriter_qos name="PulseTopicWriter">
                <publication_name>
                    <name>AwsRsPulseWriter</name>
                </publication_name>
                <reliability>
                    <kind>RELIABLE_RELIABILITY_QOS</kind>
                </reliability>
                <history>
                    <kind>KEEP_LAST_HISTORY_QOS</kind>
                    <depth>200</depth>
                </history>
                <protocol>
                    <rtps_reliable_writer>
                        <heartbeat_period><sec>0</sec><nanosec>200000000</nanosec></heartbeat_period>
                        <fast_heartbeat_period><sec>0</sec><nanosec>80000000</nanosec></fast_heartbeat_period>
                        <late_joiner_heartbeat_period><sec>0</sec><nanosec>70000000</nanosec></late_joiner_heartbeat_period>
                    </rtps_reliable_writer>
                </protocol>
                <!-- !!!ToDo: update as required -->
            </datawriter_qos>
			
            <datawriter_qos name="InfoTopicWriter">
                <publication_name>
                    <name>AwsRsInfoWriter</name>
                </publication_name>
                <reliability>
                    <kind>RELIABLE_RELIABILITY_QOS</kind>
                </reliability>
                <history>
                    <kind>KEEP_LAST_HISTORY_QOS</kind>
                    <depth>2</depth>
                </history>
                <!-- !!!ToDo: update as required -->
            </datawriter_qos>

        </qos_profile>

        <qos_profile name="WisRS_LanMonQosProfile" base_name="WisRS_LanQosProfile">
            <participant_qos name="ParticipantQos"> 
                <property> 
                    <value> 
                        <element> 
                            <name>rti.monitor.library</name> 
                            <value>rtimonitoring</value> 
                        </element> 
                        <element> 
                            <name>rti.monitor.create_function</name> 
                            <value>RTIDefaultMonitor_create</value> 
                        </element> 
                    </value> 
                </property> 
            </participant_qos> 
        </qos_profile>

        <qos_profile name="WisRS_WanMonQosProfile" base_name="WisRS_WanQosProfile">
            <participant_qos name="ParticipantQos">
                <property> 
                    <value> 
                        <element> 
                            <name>rti.monitor.library</name> 
                            <value>rtimonitoring</value> 
                        </element> 
                        <element> 
                            <name>rti.monitor.create_function</name> 
                            <value>RTIDefaultMonitor_create</value> 
                        </element> 
                    </value> 
                </property> 
            </participant_qos> 
        </qos_profile>

      <qos_profile name="Best_Effort_Deadline_Qos">
        <datareader_qos>
          <durability>
            <kind>VOLATILE_DURABILITY_QOS</kind>
          </durability>
          <deadline>
            <period>
              <sec>5</sec>
              <nanosec>0</nanosec>
            </period>
          </deadline>
          <liveliness>
            <kind>AUTOMATIC_LIVELINESS_QOS</kind>
            <lease_duration>
              <sec>DURATION_INFINITE_SEC</sec>
              <nanosec>DURATION_INFINITE_NSEC</nanosec>
            </lease_duration>
          </liveliness>
          <reliability>
            <kind>BEST_EFFORT_RELIABILITY_QOS</kind>
          </reliability>
          <history>
            <kind>KEEP_LAST_HISTORY_QOS</kind>
            <depth>1</depth>
          </history>
          <resource_limits>
            <max_samples>LENGTH_UNLIMITED</max_samples>
            <max_instances>LENGTH_UNLIMITED</max_instances>
            <max_samples_per_instance>LENGTH_UNLIMITED</max_samples_per_instance>
            <initial_samples>32</initial_samples>
            <initial_instances>32</initial_instances>
          </resource_limits>
          <ownership>
            <kind>SHARED_OWNERSHIP_QOS</kind>
          </ownership>
        </datareader_qos>
        <datawriter_qos>
          <durability>
            <kind>VOLATILE_DURABILITY_QOS</kind>
          </durability>
          <deadline>
            <period>
              <sec>1</sec>
              <nanosec>0</nanosec>
            </period>
          </deadline>
          <liveliness>
            <kind>AUTOMATIC_LIVELINESS_QOS</kind>
            <lease_duration>
              <sec>DURATION_INFINITE_SEC</sec>
              <nanosec>DURATION_INFINITE_NSEC</nanosec>
            </lease_duration>
          </liveliness>
          <reliability>
            <kind>BEST_EFFORT_RELIABILITY_QOS</kind>
          </reliability>
          <history>
            <kind>KEEP_LAST_HISTORY_QOS</kind>
            <depth>1</depth>
          </history>
          <resource_limits>
            <max_samples>LENGTH_UNLIMITED</max_samples>
            <max_instances>LENGTH_UNLIMITED</max_instances>
            <max_samples_per_instance>LENGTH_UNLIMITED</max_samples_per_instance>
            <initial_samples>32</initial_samples>
            <initial_instances>32</initial_instances>
          </resource_limits>
          <ownership>
            <kind>SHARED_OWNERSHIP_QOS</kind>
          </ownership>
        </datawriter_qos>
      </qos_profile>
      <qos_profile name="Durable_State_Qos">
        <datareader_qos>
          <durability>
            <kind>TRANSIENT_LOCAL_DURABILITY_QOS</kind>
          </durability>
          <deadline>
            <period>
              <sec>DURATION_INFINITE_SEC</sec>
              <nanosec>DURATION_INFINITE_NSEC</nanosec>
            </period>
          </deadline>
          <liveliness>
            <lease_duration>
              <sec>4</sec>
              <nanosec>0</nanosec>
            </lease_duration>
          </liveliness>
          <reliability>
            <kind>RELIABLE_RELIABILITY_QOS</kind>
          </reliability>
          <history>
            <kind>KEEP_LAST_HISTORY_QOS</kind>
            <depth>1</depth>
          </history>
          <resource_limits>
            <max_samples>LENGTH_UNLIMITED</max_samples>
            <max_instances>LENGTH_UNLIMITED</max_instances>
            <max_samples_per_instance>LENGTH_UNLIMITED</max_samples_per_instance>
            <initial_samples>32</initial_samples>
            <initial_instances>32</initial_instances>
          </resource_limits>
          <ownership>
            <kind>SHARED_OWNERSHIP_QOS</kind>
          </ownership>
          <protocol>
            <rtps_reliable_reader>
              <min_heartbeat_response_delay>
                <sec>0</sec>
                <nanosec>0</nanosec>
              </min_heartbeat_response_delay>
              <max_heartbeat_response_delay>
                <sec>0</sec>
                <nanosec>0</nanosec>
              </max_heartbeat_response_delay>
            </rtps_reliable_reader>
          </protocol>
        </datareader_qos>
        <datawriter_qos>
          <durability>
            <kind>TRANSIENT_LOCAL_DURABILITY_QOS</kind>
          </durability>
          <deadline>
            <period>
              <sec>DURATION_INFINITE_SEC</sec>
              <nanosec>DURATION_INFINITE_NSEC</nanosec>
            </period>
          </deadline>
          <liveliness>
            <kind>AUTOMATIC_LIVELINESS_QOS</kind>
            <lease_duration>
              <sec>1</sec>
              <nanosec>0</nanosec>
            </lease_duration>
          </liveliness>
          <reliability>
            <kind>RELIABLE_RELIABILITY_QOS</kind>
          </reliability>
          <history>
            <kind>KEEP_LAST_HISTORY_QOS</kind>
            <depth>1</depth>
          </history>
          <resource_limits>
            <max_samples>LENGTH_UNLIMITED</max_samples>
            <max_instances>LENGTH_UNLIMITED</max_instances>
            <max_samples_per_instance>LENGTH_UNLIMITED</max_samples_per_instance>
            <initial_samples>32</initial_samples>
            <initial_instances>32</initial_instances>
          </resource_limits>
          <ownership>
            <kind>SHARED_OWNERSHIP_QOS</kind>
          </ownership>
          <protocol>
            <rtps_reliable_writer>
              <low_watermark>0</low_watermark>
              <high_watermark>1</high_watermark>
              <heartbeat_period>
                <sec>0</sec>
                <nanosec>100000000</nanosec>
              </heartbeat_period>
              <fast_heartbeat_period>
                <sec>0</sec>
                <nanosec>100000000</nanosec>
              </fast_heartbeat_period>
              <late_joiner_heartbeat_period>
                <sec>0</sec>
                <nanosec>100000000</nanosec>
              </late_joiner_heartbeat_period>
              <max_heartbeat_retries>20</max_heartbeat_retries>
              <heartbeats_per_max_samples>0</heartbeats_per_max_samples>
              <min_nack_response_delay>
                <sec>DURATION_ZERO_SEC</sec>
                <nanosec>DURATION_ZERO_NSEC</nanosec>
              </min_nack_response_delay>
              <max_nack_response_delay>
                <sec>DURATION_ZERO_SEC</sec>
                <nanosec>DURATION_ZERO_NSEC</nanosec>
              </max_nack_response_delay>
            </rtps_reliable_writer>
          </protocol>
        </datawriter_qos>
      </qos_profile>
      <qos_profile name="Command_Response_Qos">
        <datareader_qos>
          <durability>
            <kind>VOLATILE_DURABILITY_QOS</kind>
          </durability>
          <deadline>
            <period>
              <sec>DURATION_INFINITE_SEC</sec>
              <nanosec>DURATION_INFINITE_NSEC</nanosec>
            </period>
          </deadline>
          <liveliness>
            <kind>AUTOMATIC_LIVELINESS_QOS</kind>
            <lease_duration>
              <sec>4</sec>
              <nanosec>0</nanosec>
            </lease_duration>
          </liveliness>
          <reliability>
            <kind>RELIABLE_RELIABILITY_QOS</kind>
          </reliability>
          <history>
            <kind>KEEP_LAST_HISTORY_QOS</kind>
            <depth>1</depth>
          </history>
          <resource_limits>
            <max_samples>LENGTH_UNLIMITED</max_samples>
            <max_instances>LENGTH_UNLIMITED</max_instances>
            <max_samples_per_instance>LENGTH_UNLIMITED</max_samples_per_instance>
            <initial_samples>32</initial_samples>
            <initial_instances>32</initial_instances>
          </resource_limits>
          <ownership>
            <kind>SHARED_OWNERSHIP_QOS</kind>
          </ownership>
          <protocol>
            <rtps_reliable_reader>
              <min_heartbeat_response_delay>
                <sec>0</sec>
                <nanosec>0</nanosec>
              </min_heartbeat_response_delay>
              <max_heartbeat_response_delay>
                <sec>0</sec>
                <nanosec>0</nanosec>
              </max_heartbeat_response_delay>
            </rtps_reliable_reader>
          </protocol>
        </datareader_qos>
        <datawriter_qos>
          <durability>
            <kind>VOLATILE_DURABILITY_QOS</kind>
          </durability>
          <deadline>
            <period>
              <sec>DURATION_INFINITE_SEC</sec>
              <nanosec>DURATION_INFINITE_NSEC</nanosec>
            </period>
          </deadline>
          <liveliness>
            <kind>AUTOMATIC_LIVELINESS_QOS</kind>
            <lease_duration>
              <sec>1</sec>
              <nanosec>0</nanosec>
            </lease_duration>
          </liveliness>
          <reliability>
            <kind>RELIABLE_RELIABILITY_QOS</kind>
          </reliability>
          <history>
            <kind>KEEP_LAST_HISTORY_QOS</kind>
            <depth>1</depth>
          </history>
          <resource_limits>
            <max_samples>LENGTH_UNLIMITED</max_samples>
            <max_instances>LENGTH_UNLIMITED</max_instances>
            <max_samples_per_instance>LENGTH_UNLIMITED</max_samples_per_instance>
            <initial_samples>32</initial_samples>
            <initial_instances>32</initial_instances>
          </resource_limits>
          <ownership>
            <kind>SHARED_OWNERSHIP_QOS</kind>
          </ownership>
          <protocol>
            <rtps_reliable_writer>
              <low_watermark>0</low_watermark>
              <high_watermark>1</high_watermark>
              <heartbeat_period>
                <sec>0</sec>
                <nanosec>100000000</nanosec>
              </heartbeat_period>
              <fast_heartbeat_period>
                <sec>0</sec>
                <nanosec>100000000</nanosec>
              </fast_heartbeat_period>
              <late_joiner_heartbeat_period>
                <sec>0</sec>
                <nanosec>100000000</nanosec>
              </late_joiner_heartbeat_period>
              <max_heartbeat_retries>20</max_heartbeat_retries>
              <heartbeats_per_max_samples>0</heartbeats_per_max_samples>
              <min_nack_response_delay>
                <sec>0</sec>
                <nanosec>0</nanosec>
              </min_nack_response_delay>
              <max_nack_response_delay>
                <sec>0</sec>
                <nanosec>0</nanosec>
              </max_nack_response_delay>
            </rtps_reliable_writer>
          </protocol>
        </datawriter_qos>
      </qos_profile>
      <qos_profile name="Periodic_Reliable_Qos">
        <datareader_qos>
          <durability>
            <kind>VOLATILE_DURABILITY_QOS</kind>
          </durability>
          <deadline>
            <period>
              <sec>DURATION_ZERO_SEC</sec>
              <nanosec>DURATION_ZERO_NSEC</nanosec>
            </period>
          </deadline>
          <liveliness>
            <lease_duration>
              <sec>4</sec>
              <nanosec>0</nanosec>
            </lease_duration>
          </liveliness>
          <reliability>
            <kind>RELIABLE_RELIABILITY_QOS</kind>
          </reliability>
          <history>
            <kind>KEEP_LAST_HISTORY_QOS</kind>
            <depth>1</depth>
          </history>
          <ownership>
            <kind>SHARED_OWNERSHIP_QOS</kind>
          </ownership>
        </datareader_qos>
        <datawriter_qos>
          <durability>
            <kind>VOLATILE_DURABILITY_QOS</kind>
          </durability>
          <deadline>
            <period>
              <sec>DURATION_INFINITE_SEC</sec>
              <nanosec>DURATION_INFINITE_NSEC</nanosec>
            </period>
          </deadline>
          <liveliness>
            <lease_duration>
              <sec>1</sec>
              <nanosec>0</nanosec>
            </lease_duration>
          </liveliness>
          <reliability>
            <max_blocking_time>
              <sec>1</sec>
              <nanosec>0</nanosec>
            </max_blocking_time>
          </reliability>
          <history>
            <kind>KEEP_LAST_HISTORY_QOS</kind>
            <depth>10</depth>
          </history>
          <lifespan>
            <duration>
              <sec>DURATION_INFINITE_SEC</sec>
              <nanosec>DURATION_INFINITE_NSEC</nanosec>
            </duration>
          </lifespan>
          <ownership>
            <kind>SHARED_OWNERSHIP_QOS</kind>
          </ownership>
        </datawriter_qos>
      </qos_profile>
      <qos_profile name="Alarms_Events_Qos">
        <datareader_qos>
          <durability>
            <kind>TRANSIENT_LOCAL_DURABILITY_QOS</kind>
          </durability>
          <deadline>
            <period>
              <sec>DURATION_INFINITE_SEC</sec>
              <nanosec>DURATION_INFINITE_NSEC</nanosec>
            </period>
          </deadline>
          <liveliness>
            <lease_duration>
              <sec>4</sec>
              <nanosec>0</nanosec>
            </lease_duration>
          </liveliness>
          <reliability>
            <kind>RELIABLE_RELIABILITY_QOS</kind>
          </reliability>
          <history>
            <kind>KEEP_LAST_HISTORY_QOS</kind>
            <depth>1</depth>
          </history>
        </datareader_qos>
        <datawriter_qos>
          <durability>
            <kind>TRANSIENT_LOCAL_DURABILITY_QOS</kind>
          </durability>
          <liveliness>
            <lease_duration>
              <sec>1</sec>
              <nanosec>0</nanosec>
            </lease_duration>
          </liveliness>
          <reliability>
            <kind>RELIABLE_RELIABILITY_QOS</kind>
            <max_blocking_time>
              <sec>1</sec>
              <nanosec>0</nanosec>
            </max_blocking_time>
          </reliability>
          <history>
            <kind>KEEP_LAST_HISTORY_QOS</kind>
            <depth>10</depth>
          </history>
          <lifespan>
            <duration>
              <sec>DURATION_INFINITE_SEC</sec>
              <nanosec>DURATION_ZERO_NSEC</nanosec>
            </duration>
          </lifespan>
          <ownership>
            <kind>SHARED_OWNERSHIP_QOS</kind>
          </ownership>
        </datawriter_qos>
      </qos_profile>
      <qos_profile name="Batched_Samples_Qos">
        <datawriter_qos>
          <batch>
            <enable>true</enable>
            <max_data_bytes>LENGTH_UNLIMITED</max_data_bytes>
            <max_samples>10</max_samples>
            <max_flush_delay>
              <sec>1</sec>
              <nanosec>0</nanosec>
            </max_flush_delay>
          </batch>
        </datawriter_qos>
      </qos_profile>
      
      <!-- Profile used by the pulse_pi app -->     
      <qos_profile name="pulse_pi_Profile" is_default_qos="false">
            <!-- QoS used to configure the data writer created in the example code -->                
            <datawriter_qos>
                <protocol>
                  <rtps_reliable_writer>
                    <heartbeat_period><sec>0</sec><nanosec>600000000</nanosec></heartbeat_period>
                    <fast_heartbeat_period><sec>0</sec><nanosec>300000000</nanosec></fast_heartbeat_period>
                    <late_joiner_heartbeat_period><sec>0</sec><nanosec>200000000</nanosec></late_joiner_heartbeat_period>
                  </rtps_reliable_writer>
                </protocol>
                <publication_name>
                    <name>MedicalDemoDataWriter</name>
                </publication_name>
                <reliability>
                    <kind>RELIABLE_RELIABILITY_QOS</kind>
                </reliability>
                <history>
                    <kind>KEEP_LAST_HISTORY_QOS</kind>
                    <depth>200</depth>
                </history>
            </datawriter_qos>

            <!-- QoS used to configure the data reader created in the example code -->                
            <datareader_qos>
                <subscription_name>
                    <name>MedicalDemoDataReader</name>
                </subscription_name>
                <reliability>
                    <kind>RELIABLE_RELIABILITY_QOS</kind>
                </reliability>
                <history>
                    <kind>KEEP_LAST_HISTORY_QOS</kind>
                    <depth>200</depth>
                </history>
            </datareader_qos>
            <participant_qos>
                <!--
                The participant name, if it is set, will be displayed in the
                RTI tools, making it easier for you to tell one
                application from another when you're debugging.
                -->
                <participant_name>
                    <name>pulse_pi_Participant</name>
                    <role_name>pulse_pi_Role</role_name>
                </participant_name>

            </participant_qos>
        </qos_profile>
      
    </qos_library>

    <domain_library name="MedicalDomainLibrary1">
      <domain name="MedicalDomain0" domain_id="0">
        <register_type name="PatientPulseType" type_ref="RTI::PATIENT::PatientPulse"/>
        <register_type name="PatientInfoType" type_ref="RTI::PATIENT::PatientInfo"/>
        <register_type name="PatientConfigType" type_ref="RTI::PATIENT::PatientConfig"/>
        <topic name="PatientPulseTopic" register_type_ref="PatientPulseType"/>
        <topic name="PatientInfoTopic" register_type_ref="PatientInfoType"/>
        <topic name="PatientConfigTopic" register_type_ref="PatientConfigType"/>
      </domain>
    </domain_library>

    <domain_participant_library name="MedicalParticipantLibrary1">
      <domain_participant name="RaspberryPiParticipant1" domain_ref="MedicalDomainLibrary1::MedicalDomain0">
        <publisher name="RaspberryPiPublisher1">
          <data_writer name="PatientPulseTopicWriter" topic_ref="PatientPulseTopic"/>
          <data_writer name="PatientInfoTopicWriter" topic_ref="PatientInfoTopic"/>
        </publisher>
        <subscriber name="RaspberryPiSubscriber1">
          <data_reader name="PatientConfigTopicReader" topic_ref="PatientConfigTopic"/>
        </subscriber>
      </domain_participant>
    </domain_participant_library>

</dds>
