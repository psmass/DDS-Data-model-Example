<?xml version="1.0" encoding="UTF-8"?>
<dds xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://community.rti.com/schema/6.1.0/rti_dds_profiles.xsd" version="6.1.0">
    <types>
      <directive kind="copy">// Common Data Types</directive>
      <module name="Common">
        <!--constants-->
        <const name="MIN_LEN" type="uint16" value="100"/>
        <const name="MED_LEN" type="uint16" value="200"/>
        <const name="MAX_LEN" type="uint16" value="500"/>
        <typedef name="LargeString_t" type="string" stringMaxLength="Common::MAX_LEN"/>
        <typedef name="MediumString_t" type="string" stringMaxLength="Common::MED_LEN"/>
        <typedef name="ShortString_t" type="string" stringMaxLength="Common::MIN_LEN"/>
        <typedef name="Descriptor_t" type="nonBasic" nonBasicTypeName="Common::ShortString_t"/>
        <typedef name="Percentage_t" type="float32" default="0.0"/>
        <typedef name="PressureInPascal_t" type="float32" default="0.0"/>
        <typedef name="TemperatureInDegreesKelvin_t" type="float32" default="0.0"/>
        <typedef name="ConcentrationInMolesPerCubicMetre_t" type="float32" min="0.0"/>
        <directive kind="copy">// Identifies a resource</directive>
        <struct name="IdentifierType_t" nested="true">
          <member name="resourceId" type="uint32"/>
          <member name="id" type="int32"/>
        </struct>
        <typedef name="IdentifierList_t" type="nonBasic" nonBasicTypeName="Common::IdentifierType_t" sequenceMaxLength="Common::MAX_LEN"/>
        <enum name="ResponseCode_t" extensibility="appendable">
          <enumerator name="Invalid" defaultLiteral="true"/>
          <enumerator name="Success"/>
          <enumerator name="Pending"/>
          <enumerator name="Error"/>
        </enum>
        <directive kind="copy">// Time</directive>
        <struct name="DateTime_t" nested="true">
          <member name="secs" type="int64"/>
          <member name="nsecs" type="int64"/>
        </struct>
        <struct name="MetaData_t" extensibility="mutable" nested="true">
          <member name="timeOfGeneration" type="nonBasic" nonBasicTypeName="Common::DateTime_t"/>
        </struct>
        <typedef name="BinaryData_t" type="int16" arrayDimensions="Common::MAX_LEN" external="true"/>
        <enum name="UnitType">
          <enumerator name="Farenheit"/>
          <enumerator name="Celcius"/>
          <enumerator name="Percent"/>
        </enum>
        <struct name="MeasurementCoordinate_t" nested="true">
          <member name="latitude" type="float64"/>
          <member name="longitude" type="float64"/>
        </struct>
      </module>
      <module name="Alarms">
        <enum name="Severities">
          <enumerator name="Critical"/>
          <enumerator name="Major"/>
          <enumerator name="Minor"/>
          <enumerator name="Informational"/>
        </enum>
        <enum name="State">
          <enumerator name="Open"/>
          <enumerator name="Closed"/>
        </enum>
        <struct name="ValueDefinition" nested="true">
          <member name="number" type="float32"/>
          <member name="Units" type="nonBasic" nonBasicTypeName="Common::UnitType"/>
        </struct>
        <struct name="Alarm">
          <member name="sourceId" type="nonBasic" nonBasicTypeName="Common::IdentifierType_t" key="true"/>
          <member name="alarmTypeName" type="nonBasic" nonBasicTypeName="Common::Descriptor_t"/>
          <member name="severity" type="nonBasic" nonBasicTypeName="Alarms::Severities"/>
          <member name="null" type="nonBasic" nonBasicTypeName="Alarms::State"/>
          <member name="numericValue" type="nonBasic" nonBasicTypeName="Alarms::ValueDefinition" optional="true"/>
        </struct>
        <struct name="HumidityAlarm" baseType="Alarms::Alarm">
          <member name="relativeHumidity" type="nonBasic" nonBasicTypeName="Common::Percentage_t"/>
        </struct>
        <struct name="MotionAlarm" baseType="Alarms::Alarm">
          <member name="coordinate" type="nonBasic" nonBasicTypeName="Common::MeasurementCoordinate_t"/>
        </struct>
        <struct name="FireAlarm" baseType="Alarms::Alarm">
          <member name="temperature" type="float32"/>
          <member name="units" type="nonBasic" nonBasicTypeName="Common::UnitType"/>
        </struct>
        <struct name="IntrusionAlarm" baseType="Alarms::Alarm">
          <member name="coordinate" type="nonBasic" nonBasicTypeName="Common::MeasurementCoordinate_t"/>
        </struct>
      </module>
    </types>

    <qos_library name="NewQosLibrary1">
      <qos_profile name="Reliable">
        <datawriter_qos>
          <history>
            <depth>100</depth>
          </history>
        </datawriter_qos>
      </qos_profile>
    </qos_library>

</dds>
