module ExCmdRsp {
  /* Start_Header_File_Const-Block 
       These Constants are defined here as part of the system model and used to generate a header file where they can be used 
       from a .cxx file. Unfortunately they cannot also be used within this XML file itself
       */
  const string MODULE_EX_CMD_RSP = "ExCmdRsp";

  const string TOPIC_CONFIGURE_DEVICE = "ExCmdRsp::ConfigureDevice";

  const string TOPIC_CONFIGURE_DEV_CFT = "ConfigureDevice::MyFilter";

  const string TOPIC_DEVICE_STATE = "ExCmdRsp::DeviceState";

  const string CONTROLLER1_PARTICIPANT = "CmdRspParticipantLibrary::ControllerParticipant1";

  const string DEVICE1_PARTICIPANT = "CmdRspParticipantLibrary::DeviceParticipant1";

  const string DEVICE_STATE_WRITER = "DevicePublisher::DeviceStateWriter";

  const string DEVICE_STATE_READER = "ControllerSubscriber::DeviceStateReader";

  const string CONFIGURE_DEVICE_WRITER = "ControllerPublisher::ConfigureDeviceWriter";

  const string CONFIGURE_DEVICE_READER = "DeviceSubscriber::ConfigureDeviceReader";

  const string CMD_RSP_QOS_LIBRARY = "CmdRspQoSLibrary";

  const string DEVICE_STATE_TOPIC_QOS_PROFILE = "DeviceStateProfile";

  const string CONFIG_DEV_TOPIC_QOS_PROFILE = "ConfigDevProfile";

  /* End_Header_File_Const_Block */
  const uint32 LEN_DEVICE_ID = 32;

  const uint32 LEN_STR_FOO = 10;

  const uint32 LEN_STR_BAR = 16;

  enum DeviceStateEnum {
    UNINITIALIZED,
    OFF,
    ON,
    ERROR
  };

  @nested
  struct DeviceId {
    int32 resourceId;
    int32 id;
  };

  @nested
  struct DeviceConfigurationStuct {
    ExCmdRsp::DeviceStateEnum stateReq;
    string<LEN_STR_FOO> fooName;
    int32 fooValue;
    string<LEN_STR_BAR> barName;
    uint32 barValue;
  };

  typedef ExCmdRsp::DeviceConfigurationStuct DeviceConfiguration;

  struct ConfigureDevice {
    ExCmdRsp::DeviceId targetDeviceId;
    ExCmdRsp::DeviceConfiguration deviceConfig;
  };

  struct DeviceState {
    @key
    ExCmdRsp::DeviceId myDeviceId;
    ExCmdRsp::DeviceStateEnum state;
  };

};

